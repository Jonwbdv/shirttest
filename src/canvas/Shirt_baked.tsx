/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.10 shirt_baked.glb -t 
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF, Decal} from '@react-three/drei'
import { GLTF } from 'three-stdlib'


import {useTexture} from '@react-three/drei'

import state from '../store'
import { useSnapshot } from 'valtio' 
import { useFrame } from '@react-three/fiber'
import { easing } from 'maath'

type GLTFResult = GLTF & {
  nodes: {
    T_Shirt_male: THREE.Mesh
  }
  materials: {
    lambert1: THREE.MeshStandardMaterial
  }
}

export function Shirt(props: JSX.IntrinsicElements['group']) {
  
  const snap = useSnapshot(state)
  const fullTexture = useTexture(snap.fullDecal)
  const logoTexture = useTexture(snap.logoDecal)

  useFrame((state, delta) => {
    
    easing.dampC(materials.lambert1.color, snap.color, 0.25, delta)
  })
  const stateString = JSON.stringify(snap)

  const { nodes, materials } = useGLTF('/shirt_baked.glb') as GLTFResult
  return (
    <group {...props} dispose={null} key={stateString}>
      <mesh geometry={nodes.T_Shirt_male.geometry} material={materials.lambert1} material-roughness={1} dispose={null} castShadow>
        {snap.isFullTexture && (
          <Decal position={[0,0,0]} rotation={[0,0,0]} scale={1} map={fullTexture}/>
        )}
        {snap.isLogoTexture && (
          <Decal position={[0,0.04,0.15]} rotation={[0,0,0]} scale={0.15} map={logoTexture}/>
        )}
      </mesh>

    </group>
  )
}

useGLTF.preload('/shirt_baked.glb')
